Build Notes for eMusic/J / Classicsonline / Reggae Country download manager

http://www.kallisti.net.nz/EMusicJ/HomePage

Compiling this from source is relatively simple, there is an ant build
script that will compile and output five versions of the program:
Linux i686 (32-bit), Linux x86_64 (64-bit), Linux PPC, win32 and Mac OS X.

It requires Sun Java JDK 1.5 or above, and pretty much any recent version of Ant
to build. The source is configured as an Eclipse project, so using this will 
probably be the easiest method of working on it. When running, it is required
that the java library path be set with -Djava.library.path, in order to find
the SWT libraries. See the .launch files for examples of this.  

Also note that sometimes I'm working on a 64-bit machine, sometimes on 32.
The SWT libraries don't work if you are loading the wrong one, so if you
see strange errors coming from SWT (especially relating to 'mmov'), you may
need to switch the classpath that you are using to the appropriate platform.

This ant script has the following targets:
 * emusicj - the default target, this produces eMusic/J
 * naxos - this produces the Classicsonline download manager
 * reggaecountry - this produces the Reggaecountry download manager
 * bluepie - this produces the BluePie download manager
When built, the resulting applications appear in the 'dist' subdirectory.

Building is currently configured to work on Linux only, however it can be
easily modified to also work on OS X. Building on Windows is more problematic
as Windows doesn't support the executable bit on files that is needed by both
the Linux and Mac OS X versions. However it can be done if those versions are
then moved to a Linux or Mac OS X machine, and the executable bit applied to
the launch script (e.g. 'emusicj') in the case of Linux, and 
'JavaApplicationStub' on Mac OS X.

One dependency (other than Java and Ant) is required to build:
NSIS, this produces the installer for windows (see the note in 
lib/buildonly/nsis about this when using a distro-supplied version on Linux)

Also, launch4j is included in the repository to produce a Windows .exe file. 
This doesn't seem to work on the Mac, but it is likely that it is simply a 
different version that is required.

When building for Windows, a complete installer is produced, which can be
directly given to people.

When building for Mac, an app bundle is created. A .dmg isn't created from this
as it seems that it's only possible to do this when running on OSX itself.

The Linux version is simply the application in its unpackaged form, it is ready
for tarballing up and distributing.

The latest version of this source can be downloaded using Bazaar, see
https://www.kallisti.net.nz/trac/emusicj for details.

Adapting this code to create a customised version is fairly easy, see the 
Naxos related Java and config files versus the EMusicJ ones to see how this is
done. Of course, if you do create and distribute a custom version, the source
must be made available, as per the GPL.

Unless otherwise noted, the source code contained here is under the GNU
General Public Licence version 3 (see doc/COPYING).

-- Robin Sheat <robin@kallisti.net.nz>, 20 July 2009
